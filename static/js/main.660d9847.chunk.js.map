{"version":3,"sources":["components/Card/Card.js","containers/Board/Board.js","App.js","index.js","components/Card/Card.module.css","containers/Board/Board.module.css"],"names":["Card","name","isFlipped","isActive","handleClick","index","className","styles","card","card__discarded","card__flipped","onClick","card__title","alphabets","active","shuffle","arr","i","length","randomIndex","Math","floor","random","temp","Board","useState","cards","setCards","openCards","setOpenCards","discardedCards","setDiscardedCards","flippedCards","setFlippedCards","matches","setMatches","turns","setTurns","useEffect","compare","gameOver","window","onbeforeunload","event","e","preventDefault","returnValue","firstCardIndex","secondCardIndex","alert","resetGame","isDiscarded","some","discardedCard","board","board__matches","board__cards","map","includes","board__turns","board__resetBtn","board__resetBtn__title","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.660d9847.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./Card.module.css\";\n\nexport const Card = ({ name, isFlipped, isActive, handleClick, index }) => {\n  return (\n    <div className={styles.card}>\n      {isFlipped && (\n        <div\n          className={isActive ? styles.card__discarded : styles.card__flipped}\n          onClick={() => handleClick(index)}\n        >\n          <p className={styles.card__title}>{name}</p>\n        </div>\n      )}\n      {!isFlipped && (\n        <div\n          className={isActive ? styles.card__discarded : styles.card__flipped}\n          onClick={() => handleClick(index)}\n        ></div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card } from \"../../components\";\nimport styles from \"./Board.module.css\";\n\nconst alphabets = [\n  { name: \"A\", active: true },\n  { name: \"B\", active: true },\n  { name: \"C\", active: true },\n  { name: \"D\", active: true },\n  { name: \"E\", active: true },\n  { name: \"F\", active: true },\n  { name: \"G\", active: true },\n  { name: \"H\", active: true },\n];\n\n//shuffle cards\nconst shuffle = (arr) => {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const randomIndex = Math.floor(Math.random() * i);\n    const temp = arr[i];\n    arr[i] = arr[randomIndex];\n    arr[randomIndex] = temp;\n  }\n  return arr;\n};\n\nexport const Board = () => {\n  //states\n  const [cards, setCards] = useState(shuffle([...alphabets, ...alphabets]));\n  const [openCards, setOpenCards] = useState([]);\n  const [discardedCards, setDiscardedCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matches, setMatches] = useState(0);\n  const [turns, setTurns] = useState(0);\n\n  //run everytime two cards are open\n  useEffect(() => {\n    if (openCards.length === 2) {\n      compare();\n    }\n  }, [openCards]);\n\n  //run everytime cards are discarded\n  useEffect(() => {\n    gameOver();\n  }, [discardedCards]);\n\n  useEffect(() => {\n    window.onbeforeunload = (event) => {\n      const e = event || window.event;\n      // Cancel the event\n      e.preventDefault();\n      if (e) {\n        e.returnValue = \"\"; // Legacy method for cross browser support\n      }\n      return \"\"; // Legacy method for cross browser support\n    };\n  }, []);\n\n  //handle card click\n  const handleClick = (index) => {\n    if (openCards.length === 1) {\n      setOpenCards([...openCards, index]);\n      setFlippedCards([...flippedCards, index]);\n      setTurns(turns + 1);\n    } else {\n      setOpenCards([index]);\n      setFlippedCards([index]);\n    }\n  };\n\n  //handle comparing two cards\n  const compare = () => {\n    const [firstCardIndex, secondCardIndex] = openCards;\n\n    if (cards[firstCardIndex].name === cards[secondCardIndex].name) {\n      setDiscardedCards([\n        ...discardedCards,\n        {\n          ...cards[firstCardIndex],\n          active: false,\n        },\n      ]);\n      setMatches(matches + 1);\n      setFlippedCards([]);\n      return;\n    } else {\n      setFlippedCards([]);\n    }\n  };\n\n  //check if all the cards have been discarded\n  const gameOver = () => {\n    if (discardedCards.length === alphabets.length) {\n      alert(`Game over, your score is ${matches} in ${turns} turns`);\n      resetGame();\n    }\n  };\n\n  //check if the card is flipped\n  const isFlipped = (index) => {\n    return openCards.includes(index);\n  };\n\n  //check if the card is discarded\n  const isDiscarded = (card) => {\n    return discardedCards.some(\n      (discardedCard) => discardedCard.name === card.name\n    );\n  };\n\n  //reset the game\n  const resetGame = () => {\n    setMatches(0);\n    setTurns(0);\n    setDiscardedCards([]);\n    setFlippedCards([]);\n    setOpenCards([]);\n    setCards(shuffle([...alphabets, ...alphabets]));\n  };\n\n  return (\n    <div className={styles.board}>\n      <div className={styles.board__matches}>\n        <h2>Matches: {matches}</h2>\n      </div>\n      <div className={styles.board__cards}>\n        {cards.map((card, i) => (\n          <Card\n            key={i}\n            handleClick={handleClick}\n            index={i}\n            name={card.name}\n            isActive={isDiscarded(card)}\n            isFlipped={isFlipped(i)}\n          />\n        ))}\n      </div>\n      <div className={styles.board__turns}>\n        <h2>Attempts: {turns}</h2>\n        <button className={styles.board__resetBtn} onClick={resetGame}>\n          <span className={styles.board__resetBtn__title}>Restart</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Board } from \"./containers\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card__flipped\":\"Card_card__flipped__fqdZI\",\"card__title\":\"Card_card__title__3anYP\",\"card__discarded\":\"Card_card__discarded__iyRUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__2r9yi\",\"board__cards\":\"Board_board__cards__29NJr\",\"board__turns\":\"Board_board__turns__Q-NOx\",\"board__resetBtn\":\"Board_board__resetBtn__3TqNX\",\"board__resetBtn__title\":\"Board_board__resetBtn__title__1wahE\"};"],"sourceRoot":""}